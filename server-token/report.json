{
  "stats": {
    "suites": 7,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-19T16:12:21.368Z",
    "end": "2022-04-19T16:12:21.538Z",
    "duration": 170
  },
  "tests": [
    {
      "title": "인증서 파일이 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 인증서 파일이 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "환경변수에 데이터베이스 비밀번호가 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 환경변수에 데이터베이스 비밀번호가 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "환경변수에 엑세스 토큰의 암호화 및 복호화에 사용할 비밀번호가 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 환경변수에 엑세스 토큰의 암호화 및 복호화에 사용할 비밀번호가 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "환경변수에 새로운 엑세스 토큰을 만들기위한 비밀번호가 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 환경변수에 새로운 엑세스 토큰을 만들기위한 비밀번호가 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "데이터베이스와 연결할수 있어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Database 데이터베이스와 연결할수 있어야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "데이터베이스에 `Users` 테이블이 존재해야 합니다",
      "fullTitle": "Authentication - Server Authentication - Database 데이터베이스에 `Users` 테이블이 존재해야 합니다",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "https 프로토콜을 사용하는 서버여야 합니다.",
      "fullTitle": "Authentication - Server Authentication - Server https 프로토콜을 사용하는 서버여야 합니다.",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 요청시 전달받은 유저 아이디 혹은 비밀번호가 잘못된 경우, 'not authorized'메세지가 응답에 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 요청시 전달받은 유저 아이디 혹은 비밀번호가 잘못된 경우, 'not authorized'메세지가 응답에 포함되어야 합니다",
      "duration": 58,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 'ok'메세지가 응답에 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 'ok'메세지가 응답에 포함되어야 합니다",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 응답에 accessToekn이 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 응답에 accessToekn이 포함되어야 합니다",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "응답에 전달되는 엑세스 토큰은 유저정보가 담긴 JWT 토큰이여만 합니다.\n      \t- 환경변수중 ACCESS_SECRET 변수를 사용하세요.\n      ",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 응답에 전달되는 엑세스 토큰은 유저정보가 담긴 JWT 토큰이여만 합니다.\n      \t- 환경변수중 ACCESS_SECRET 변수를 사용하세요.\n      ",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 성공시 전달되는 응답객체에는 refreshToken이 존재해야 합니다.",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 성공시 전달되는 응답객체에는 refreshToken이 존재해야 합니다.",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "헤더 authorization 부분이 없는 요청 혹은 잘못된 토큰을 전달받은 경우, 응답에는 'invalid access token' 메세지가 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /accesstokenrequest 헤더 authorization 부분이 없는 요청 혹은 잘못된 토큰을 전달받은 경우, 응답에는 'invalid access token' 메세지가 포함되어야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "헤더 authorization 부분에 jwt 토큰이 존재하며 토큰에 유저정보가 담겨져 있는경우, 해당 유저의 정보를 리턴해야 합니다 ",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /accesstokenrequest 헤더 authorization 부분에 jwt 토큰이 존재하며 토큰에 유저정보가 담겨져 있는경우, 해당 유저의 정보를 리턴해야 합니다 ",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "쿠키에 리프레쉬 토큰이 없는 경우, 'refresh token not provided'메세지를 리턴해야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /refreshtokenrequest 쿠키에 리프레쉬 토큰이 없는 경우, 'refresh token not provided'메세지를 리턴해야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "유효하지 않은 리프레쉬 토큰을 전달받은 경우,  'invalid refresh token, please log in again'메세지를 보내야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /refreshtokenrequest 유효하지 않은 리프레쉬 토큰을 전달받은 경우,  'invalid refresh token, please log in again'메세지를 보내야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "유효한 리프레쉬 토큰을 전달받은 경우, 새로운 엑세스 토큰 및 비밀번호를 포함하지 않은 유저정보를 리턴해야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /refreshtokenrequest 유효한 리프레쉬 토큰을 전달받은 경우, 새로운 엑세스 토큰 및 비밀번호를 포함하지 않은 유저정보를 리턴해야 합니다",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [],
  "passes": [
    {
      "title": "인증서 파일이 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 인증서 파일이 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "환경변수에 데이터베이스 비밀번호가 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 환경변수에 데이터베이스 비밀번호가 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "환경변수에 엑세스 토큰의 암호화 및 복호화에 사용할 비밀번호가 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 환경변수에 엑세스 토큰의 암호화 및 복호화에 사용할 비밀번호가 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "환경변수에 새로운 엑세스 토큰을 만들기위한 비밀번호가 존재해야 합니다",
      "fullTitle": "파일 및 환경변수 테스트 환경변수에 새로운 엑세스 토큰을 만들기위한 비밀번호가 존재해야 합니다",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "데이터베이스와 연결할수 있어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Database 데이터베이스와 연결할수 있어야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "데이터베이스에 `Users` 테이블이 존재해야 합니다",
      "fullTitle": "Authentication - Server Authentication - Database 데이터베이스에 `Users` 테이블이 존재해야 합니다",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "https 프로토콜을 사용하는 서버여야 합니다.",
      "fullTitle": "Authentication - Server Authentication - Server https 프로토콜을 사용하는 서버여야 합니다.",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 요청시 전달받은 유저 아이디 혹은 비밀번호가 잘못된 경우, 'not authorized'메세지가 응답에 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 요청시 전달받은 유저 아이디 혹은 비밀번호가 잘못된 경우, 'not authorized'메세지가 응답에 포함되어야 합니다",
      "duration": 58,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 'ok'메세지가 응답에 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 'ok'메세지가 응답에 포함되어야 합니다",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 응답에 accessToekn이 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 요청시 전달받은 유저아이디, 비밀번호가 데이터베이스에 저장된 정보와 완벽히 일치하는 경우, 응답에 accessToekn이 포함되어야 합니다",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "응답에 전달되는 엑세스 토큰은 유저정보가 담긴 JWT 토큰이여만 합니다.\n      \t- 환경변수중 ACCESS_SECRET 변수를 사용하세요.\n      ",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 응답에 전달되는 엑세스 토큰은 유저정보가 담긴 JWT 토큰이여만 합니다.\n      \t- 환경변수중 ACCESS_SECRET 변수를 사용하세요.\n      ",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 성공시 전달되는 응답객체에는 refreshToken이 존재해야 합니다.",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ POST /login 로그인 성공시 전달되는 응답객체에는 refreshToken이 존재해야 합니다.",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "헤더 authorization 부분이 없는 요청 혹은 잘못된 토큰을 전달받은 경우, 응답에는 'invalid access token' 메세지가 포함되어야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /accesstokenrequest 헤더 authorization 부분이 없는 요청 혹은 잘못된 토큰을 전달받은 경우, 응답에는 'invalid access token' 메세지가 포함되어야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "헤더 authorization 부분에 jwt 토큰이 존재하며 토큰에 유저정보가 담겨져 있는경우, 해당 유저의 정보를 리턴해야 합니다 ",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /accesstokenrequest 헤더 authorization 부분에 jwt 토큰이 존재하며 토큰에 유저정보가 담겨져 있는경우, 해당 유저의 정보를 리턴해야 합니다 ",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "쿠키에 리프레쉬 토큰이 없는 경우, 'refresh token not provided'메세지를 리턴해야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /refreshtokenrequest 쿠키에 리프레쉬 토큰이 없는 경우, 'refresh token not provided'메세지를 리턴해야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "유효하지 않은 리프레쉬 토큰을 전달받은 경우,  'invalid refresh token, please log in again'메세지를 보내야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /refreshtokenrequest 유효하지 않은 리프레쉬 토큰을 전달받은 경우,  'invalid refresh token, please log in again'메세지를 보내야 합니다",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "유효한 리프레쉬 토큰을 전달받은 경우, 새로운 엑세스 토큰 및 비밀번호를 포함하지 않은 유저정보를 리턴해야 합니다",
      "fullTitle": "Authentication - Server Authentication - Server ⛳️ GET /refreshtokenrequest 유효한 리프레쉬 토큰을 전달받은 경우, 새로운 엑세스 토큰 및 비밀번호를 포함하지 않은 유저정보를 리턴해야 합니다",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    }
  ]
}